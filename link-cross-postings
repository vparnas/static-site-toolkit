#!/bin/bash

[ -f ".${0##*/}.cfg" ] && . ".${0##*/}.cfg" || echo "Cannot source .${0##*/}.cfg"

TSTAMP_FILE=".lcp_updated"

function link_targets
{
    [ ! -d "$LCP_STAGING_DIR" ] && echo "\$LCP_STAGING_DIR does not exist" && exit
    [ ! -d "$LCP_SOURCE_DIR" ] && echo "\$LCP_SOURCE_DIR does not exist" && exit
	LINK_CMD="ln -srvf -t $LCP_STAGING_DIR"
    while read -r t; do
        [[ "$t" =~ ^[[:space:]]*$ ]] && continue
        [[ "$t" =~ ^# ]] && continue
        eval "$LINK_CMD" "$LCP_SOURCE_DIR/$t"
    done
}

# For strictly markdown/html files linked and rendered in $LCP_RENDERED_DIR, remove href paths indicated by $REMOVE_REGEX
function fix_links
{
    [ ! -d "$LCP_RENDERED_DIR" ] && echo "\$LCP_RENDERED_DIR does not exist" && exit
    [ -z "$REMOVE_REGEX" ] && echo "Nothing defined for \$REMOVE_REGEX. Exiting" && exit
	echo "${0##*/}: Executing, will indicate any modified content..."
    grep -Ei '(md|html)$' |
    while read -r t; do
        source_file="${t##*/}" # Extract just the filename portion
        source_file="$LCP_RENDERED_DIR/${source_file%.*}/index.html"
		grep -q "$REMOVE_REGEX" $source_file && 
			echo "${0##*/}: Updating links in $source_file." &&
			sed -i "s#$REMOVE_REGEX##g" "$source_file"
    done
	touch "$LCP_RENDERED_DIR/$TSTAMP_FILE"
}

function help
{
    echo "-l: simlink all referenced targets in local staging directory"
    echo "-L: fix all referenced targets to reflect local (simlinked) location"
    echo "-r: set RENDERED dir (where the generated html resides)"
    echo "-s: set STAGING dir (where the cross-referenced files are linked)"
	echo "-h: this help"
}

while getopts "hlLr:s:" o; do 
    case "${o}" in
        l) link_targets; exit 0;;
        L) fix_links; exit 0;;
		r) LCP_RENDERED_DIR="$OPTARG";;
		s) LCP_STAGING_DIR="$OPTARG";;
        h|*) help; exit 0;;
    esac 
done

help

